// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Entity;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Entity.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<decimal>("HorsePower")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentalPointId")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int>("YearOfProduction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentalPointId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("backend.Entity.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("ContactNumber")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<int>("EndRentalPointId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<string>("PeselNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("RentalDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentalDateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartRentalPointId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("EndRentalPointId")
                        .IsUnique();

                    b.HasIndex("StartRentalPointId")
                        .IsUnique();

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("backend.Entity.RentalPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("RentalPointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentalPoints");
                });

            modelBuilder.Entity("backend.Entity.Car", b =>
                {
                    b.HasOne("backend.Entity.RentalPoint", "RentalPoints")
                        .WithMany("Cars")
                        .HasForeignKey("RentalPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentalPoints");
                });

            modelBuilder.Entity("backend.Entity.Rental", b =>
                {
                    b.HasOne("backend.Entity.Car", "Car")
                        .WithOne("Rental")
                        .HasForeignKey("backend.Entity.Rental", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Entity.RentalPoint", "EndRentalPoint")
                        .WithOne("EndRental")
                        .HasForeignKey("backend.Entity.Rental", "EndRentalPointId")
                        .IsRequired();

                    b.HasOne("backend.Entity.RentalPoint", "StartRentalPoint")
                        .WithOne("StartRental")
                        .HasForeignKey("backend.Entity.Rental", "StartRentalPointId")
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("EndRentalPoint");

                    b.Navigation("StartRentalPoint");
                });

            modelBuilder.Entity("backend.Entity.Car", b =>
                {
                    b.Navigation("Rental")
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Entity.RentalPoint", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("EndRental")
                        .IsRequired();

                    b.Navigation("StartRental")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
